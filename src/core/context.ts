import { INDENT_TYPE, INVALID_KEY_STRATEGY, KEY_GENERATION_FILL_SCOPE, KEY_STRATEGY, KEY_STYLE } from "@/types";
import { LangContextInternal } from "@/types/context";

export const createLangContext = (): LangContextInternal => ({
  task: "",
  langPath: "",
  langFileType: "",
  projectPath: "",
  ignoredLangs: [],
  globalFlag: true,
  exportDir: "",
  cachePath: "",
  styleScore: 0,
  fileStructure: null,
  modifyList: [],
  sortAfterFix: false,
  sortingWriteMode: "none",
  sortingExportMode: "none",
  matchExistingKey: true,
  autoTranslateEmptyKey: true,
  keyGenerationFillScope: KEY_GENERATION_FILL_SCOPE.all,
  keyStyle: KEY_STYLE.camelCase,
  keyStrategy: KEY_STRATEGY.english,
  stopWords: [],
  maxKeyLength: 40,
  keyPrefix: "",
  indentType: INDENT_TYPE.auto,
  indentSize: 0,
  quoteStyleForKey: "auto",
  quoteStyleForValue: "auto",
  i18nFramework: "none",
  namespaceStrategy: "none",
  scanStringLiterals: true,
  missingEntryFile: "",
  missingEntryPath: "",
  fixQuery: {
    entriesToGen: true,
    entriesToFill: true
  },
  invalidKeyStrategy: INVALID_KEY_STRATEGY.ai,

  langDictionary: {},
  langCountryMap: {},
  lackInfo: {},
  extraInfo: {},
  nullInfo: {},
  entryClassTree: [],
  undefinedEntryList: [],
  undefinedEntryMap: {},
  usedEntryMap: {},
  usedKeySet: new Set<string>(),
  unusedKeySet: new Set<string>(),
  multiFileMode: 0,
  nestedLocale: 0,
  langFileExtraInfo: {},
  isVacant: true,
  entryTree: {},
  updatePayloads: [],
  patchedEntryIdInfo: {},
  referredLang: "",
  defaultLang: "en",
  importExcelFrom: "",
  importSheetData: "",
  exportExcelTo: "",
  syncBasedOnReferredEntries: false,
  trimKeyList: [],
  manuallyMarkedUsedEntries: [],
  ignoredUndefinedEntries: [],
  nameSeparator: ""
});
